[13-01-17 13:27:15,009] DEBUG (                   org.hibernate.cfg.Settings-                        <init>: 108) -> JDBC3 getGeneratedKeys(): disabled
[13-01-17 13:27:15,009] DEBUG (                   org.hibernate.cfg.Settings-                        <init>: 109) -> JDBC result set fetch size: null
[13-01-17 13:27:15,010] DEBUG (                   org.hibernate.cfg.Settings-                        <init>: 110) -> Connection release mode: AFTER_TRANSACTION
[13-01-17 13:27:15,010] DEBUG (                   org.hibernate.cfg.Settings-                        <init>: 111) -> Generate SQL with comments: disabled
[13-01-17 13:27:15,051] DEBUG (    org.hibernate.internal.SessionFactoryImpl-                        <init>: 254) -> Session factory constructed with filter configurations : {}
[13-01-17 13:27:15,051] DEBUG (    org.hibernate.internal.SessionFactoryImpl-                        <init>: 255) -> Instantiating session factory with properties: {gopherProxySet=false, hibernate.format_sql=true, awt.toolkit=sun.lwawt.macosx.LWCToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, my-store=/Users/jcruz 1/MyCodeProjects/SFI.my-store/my-store/src/main/webapp/, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.OracleDialect, java.class.path=/usr/local/Cellar/maven/3.3.9/libexec/boot/plexus-classworlds-2.5.2.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, user.timezone=America/New_York, os.name=Mac OS X, java.vm.specification.version=1.8, hibernate.generate_statistics=true, hibernate.jdbc.batch_versioned_data=true, hibernate.order_updates=true, sun.java.launcher=SUN_STANDARD, user.country=US, hibernate.jdbc.batch_size=15, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/lib, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher -Djetty.port=8888 jetty:run, hibernate.use_sql_comments=false, maven.home=/usr/local/Cellar/maven/3.3.9/libexec, sun.cpu.endian=little, user.home=/Users/jcruz 1, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre, file.separator=/, hibernate.connection.isolation=4, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/classes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_71-b15, user.name=jcruz, path.separator=:, os.version=10.10.5, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, guice.disable.misplaced.annotation.check=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[ContextLoader@Archetype Created Web Application], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/var/folders/f6/sp1t6czs231b9grwtw6hl7w80000gs/T/, hibernate.query.factory_class=org.hibernate.hql.ast.ASTQueryTranslatorFactory, java.version=1.8.0_71, user.dir=/Users/jcruz 1/MyCodeProjects/SFI.my-store/my-store, os.arch=x86_64, maven.multiModuleProjectDirectory=/Users/jcruz 1/MyCodeProjects/SFI.my-store/my-store, jetty.port=8888, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@570a62a5, java.library.path=/Users/jcruz 1/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.71-b15, classworlds.conf=/usr/local/Cellar/maven/3.3.9/libexec/bin/m2.conf, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.apache.commons.dbcp.BasicDataSource@71a06021, sun.io.unicode.encoding=UnicodeBig, java.ext.dirs=/Users/jcruz 1/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, java.class.version=52.0}
[13-01-17 13:27:15,058] DEBUG (          hibernate.secure.spi.JaccIntegrator-                 doIntegration:  80) -> Skipping JACC integration as it was not enabled
[13-01-17 13:27:15,062] DEBUG (    org.hibernate.internal.SessionFactoryImpl-                        <init>: 294) -> Instantiated session factory
[13-01-17 13:27:15,094] DEBUG (hibernate.boot.internal.ClassLoaderAccessImpl-                  classForName:  55) -> Not known whether passed class name [com.kaplan.coding.mystore.persistence.domain.OrderItem] is safe
[13-01-17 13:27:15,094] DEBUG (hibernate.boot.internal.ClassLoaderAccessImpl-                  classForName:  57) -> No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.kaplan.coding.mystore.persistence.domain.OrderItem
[13-01-17 13:27:15,107] DEBUG (hibernate.boot.internal.ClassLoaderAccessImpl-                  classForName:  55) -> Not known whether passed class name [com.kaplan.coding.mystore.persistence.domain.OrderItem] is safe
[13-01-17 13:27:15,108] DEBUG (hibernate.boot.internal.ClassLoaderAccessImpl-                  classForName:  57) -> No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.kaplan.coding.mystore.persistence.domain.OrderItem
[13-01-17 13:27:15,112]  INFO (         org.hibernate.tuple.PojoInstantiator-                        <init>:  47) -> HHH000182: No default (no-argument) constructor for class: com.kaplan.coding.mystore.persistence.domain.OrderItem (class must be instantiated by Interceptor)
[13-01-17 13:27:15,149] DEBUG (hibernate.boot.internal.ClassLoaderAccessImpl-                  classForName:  55) -> Not known whether passed class name [com.kaplan.coding.mystore.persistence.domain.Product] is safe
[13-01-17 13:27:15,149] DEBUG (hibernate.boot.internal.ClassLoaderAccessImpl-                  classForName:  57) -> No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.kaplan.coding.mystore.persistence.domain.Product
[13-01-17 13:27:15,150] DEBUG (hibernate.boot.internal.ClassLoaderAccessImpl-                  classForName:  55) -> Not known whether passed class name [com.kaplan.coding.mystore.persistence.domain.Product] is safe
[13-01-17 13:27:15,150] DEBUG (hibernate.boot.internal.ClassLoaderAccessImpl-                  classForName:  57) -> No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.kaplan.coding.mystore.persistence.domain.Product
[13-01-17 13:27:15,153] DEBUG (hibernate.boot.internal.ClassLoaderAccessImpl-                  classForName:  55) -> Not known whether passed class name [com.kaplan.coding.mystore.persistence.domain.Orders] is safe
[13-01-17 13:27:15,153] DEBUG (hibernate.boot.internal.ClassLoaderAccessImpl-                  classForName:  57) -> No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.kaplan.coding.mystore.persistence.domain.Orders
[13-01-17 13:27:15,153] DEBUG (hibernate.boot.internal.ClassLoaderAccessImpl-                  classForName:  55) -> Not known whether passed class name [com.kaplan.coding.mystore.persistence.domain.Orders] is safe
[13-01-17 13:27:15,153] DEBUG (hibernate.boot.internal.ClassLoaderAccessImpl-                  classForName:  57) -> No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.kaplan.coding.mystore.persistence.domain.Orders
[13-01-17 13:27:15,159] DEBUG (hibernate.persister.entity.AbstractEntityPersister-                  logStaticSQL:3544) -> Static SQL for entity: com.kaplan.coding.mystore.persistence.domain.OrderItem
[13-01-17 13:27:15,160] DEBUG (hibernate.persister.entity.AbstractEntityPersister-                  logStaticSQL:3549) ->  Version select: select ORDER_ITEM_ID from ORDER_ITEM where ORDER_ITEM_ID =?
[13-01-17 13:27:15,160] DEBUG (hibernate.persister.entity.AbstractEntityPersister-                  logStaticSQL:3552) ->  Snapshot select: select orderitem_.ORDER_ITEM_ID, orderitem_.orders as orders2_0_, orderitem_.product as product3_0_, orderitem_.SOLD_QUANTITY as SOLD_QUA4_0_, orderitem_.UNIT_PRICE as UNIT_PRI5_0_ from ORDER_ITEM orderitem_ where orderitem_.ORDER_ITEM_ID=?
[13-01-17 13:27:15,160] DEBUG (      org.jboss.logging.DelegatingBasicLogger-                        debugf: 394) ->  Insert 0: insert into ORDER_ITEM (orders, product, SOLD_QUANTITY, UNIT_PRICE, ORDER_ITEM_ID) values (?, ?, ?, ?, ?)
[13-01-17 13:27:15,160] DEBUG (      org.jboss.logging.DelegatingBasicLogger-                        debugf: 394) ->  Update 0: update ORDER_ITEM set orders=?, product=?, SOLD_QUANTITY=?, UNIT_PRICE=? where ORDER_ITEM_ID=?
[13-01-17 13:27:15,161] DEBUG (      org.jboss.logging.DelegatingBasicLogger-                        debugf: 394) ->  Delete 0: delete from ORDER_ITEM where ORDER_ITEM_ID=?
[13-01-17 13:27:15,174] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ee8051c]
[13-01-17 13:27:15,175] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : orders
[13-01-17 13:27:15,175] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : product
[13-01-17 13:27:15,175] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,175] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,176] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,183] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,186] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
          - SQL table alias mapping - orderitem0_
          - alias suffix - 0_
          - suffixed key columns - {ORDER_IT1_0_0_}

[13-01-17 13:27:15,189] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.OrderItem [NONE]: select orderitem0_.ORDER_ITEM_ID as ORDER_IT1_0_0_, orderitem0_.orders as orders2_0_0_, orderitem0_.product as product3_0_0_, orderitem0_.SOLD_QUANTITY as SOLD_QUA4_0_0_, orderitem0_.UNIT_PRICE as UNIT_PRI5_0_0_ from ORDER_ITEM orderitem0_ where orderitem0_.ORDER_ITEM_ID=?
[13-01-17 13:27:15,189] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@649b5891]
[13-01-17 13:27:15,189] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : orders
[13-01-17 13:27:15,189] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : product
[13-01-17 13:27:15,189] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,190] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,190] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,190] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,190] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
          - SQL table alias mapping - orderitem0_
          - alias suffix - 0_
          - suffixed key columns - {ORDER_IT1_0_0_}

[13-01-17 13:27:15,191] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.OrderItem [READ]: select orderitem0_.ORDER_ITEM_ID as ORDER_IT1_0_0_, orderitem0_.orders as orders2_0_0_, orderitem0_.product as product3_0_0_, orderitem0_.SOLD_QUANTITY as SOLD_QUA4_0_0_, orderitem0_.UNIT_PRICE as UNIT_PRI5_0_0_ from ORDER_ITEM orderitem0_ where orderitem0_.ORDER_ITEM_ID=?
[13-01-17 13:27:15,191] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1be52861]
[13-01-17 13:27:15,191] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : orders
[13-01-17 13:27:15,191] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : product
[13-01-17 13:27:15,192] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,192] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,192] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,193] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,193] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
          - SQL table alias mapping - orderitem0_
          - alias suffix - 0_
          - suffixed key columns - {ORDER_IT1_0_0_}

[13-01-17 13:27:15,193] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.OrderItem [UPGRADE]: select orderitem0_.ORDER_ITEM_ID as ORDER_IT1_0_0_, orderitem0_.orders as orders2_0_0_, orderitem0_.product as product3_0_0_, orderitem0_.SOLD_QUANTITY as SOLD_QUA4_0_0_, orderitem0_.UNIT_PRICE as UNIT_PRI5_0_0_ from ORDER_ITEM orderitem0_ where orderitem0_.ORDER_ITEM_ID=? for update
[13-01-17 13:27:15,194] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@615439f7]
[13-01-17 13:27:15,194] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : orders
[13-01-17 13:27:15,194] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : product
[13-01-17 13:27:15,194] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,195] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,195] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,195] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,196] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
          - SQL table alias mapping - orderitem0_
          - alias suffix - 0_
          - suffixed key columns - {ORDER_IT1_0_0_}

[13-01-17 13:27:15,196] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.OrderItem [UPGRADE_NOWAIT]: select orderitem0_.ORDER_ITEM_ID as ORDER_IT1_0_0_, orderitem0_.orders as orders2_0_0_, orderitem0_.product as product3_0_0_, orderitem0_.SOLD_QUANTITY as SOLD_QUA4_0_0_, orderitem0_.UNIT_PRICE as UNIT_PRI5_0_0_ from ORDER_ITEM orderitem0_ where orderitem0_.ORDER_ITEM_ID=? for update nowait
[13-01-17 13:27:15,196] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51b87df7]
[13-01-17 13:27:15,196] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : orders
[13-01-17 13:27:15,197] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : product
[13-01-17 13:27:15,197] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,197] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,197] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,197] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,197] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
          - SQL table alias mapping - orderitem0_
          - alias suffix - 0_
          - suffixed key columns - {ORDER_IT1_0_0_}

[13-01-17 13:27:15,198] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.OrderItem [UPGRADE_SKIPLOCKED]: select orderitem0_.ORDER_ITEM_ID as ORDER_IT1_0_0_, orderitem0_.orders as orders2_0_0_, orderitem0_.product as product3_0_0_, orderitem0_.SOLD_QUANTITY as SOLD_QUA4_0_0_, orderitem0_.UNIT_PRICE as UNIT_PRI5_0_0_ from ORDER_ITEM orderitem0_ where orderitem0_.ORDER_ITEM_ID=? for update
[13-01-17 13:27:15,198] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@634e1b39]
[13-01-17 13:27:15,198] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : orders
[13-01-17 13:27:15,199] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : product
[13-01-17 13:27:15,199] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,199] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,199] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,200] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,200] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
          - SQL table alias mapping - orderitem0_
          - alias suffix - 0_
          - suffixed key columns - {ORDER_IT1_0_0_}

[13-01-17 13:27:15,201] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.OrderItem [FORCE]: select orderitem0_.ORDER_ITEM_ID as ORDER_IT1_0_0_, orderitem0_.orders as orders2_0_0_, orderitem0_.product as product3_0_0_, orderitem0_.SOLD_QUANTITY as SOLD_QUA4_0_0_, orderitem0_.UNIT_PRICE as UNIT_PRI5_0_0_ from ORDER_ITEM orderitem0_ where orderitem0_.ORDER_ITEM_ID=? for update nowait
[13-01-17 13:27:15,201] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@751d7425]
[13-01-17 13:27:15,201] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : orders
[13-01-17 13:27:15,201] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : product
[13-01-17 13:27:15,201] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,202] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,202] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,202] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,203] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
          - SQL table alias mapping - orderitem0_
          - alias suffix - 0_
          - suffixed key columns - {ORDER_IT1_0_0_}

[13-01-17 13:27:15,203] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.OrderItem [PESSIMISTIC_READ]: select orderitem0_.ORDER_ITEM_ID as ORDER_IT1_0_0_, orderitem0_.orders as orders2_0_0_, orderitem0_.product as product3_0_0_, orderitem0_.SOLD_QUANTITY as SOLD_QUA4_0_0_, orderitem0_.UNIT_PRICE as UNIT_PRI5_0_0_ from ORDER_ITEM orderitem0_ where orderitem0_.ORDER_ITEM_ID=? for update
[13-01-17 13:27:15,203] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dae70f9]
[13-01-17 13:27:15,203] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : orders
[13-01-17 13:27:15,204] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : product
[13-01-17 13:27:15,204] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,204] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,204] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,205] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,205] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
          - SQL table alias mapping - orderitem0_
          - alias suffix - 0_
          - suffixed key columns - {ORDER_IT1_0_0_}

[13-01-17 13:27:15,205] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.OrderItem [PESSIMISTIC_WRITE]: select orderitem0_.ORDER_ITEM_ID as ORDER_IT1_0_0_, orderitem0_.orders as orders2_0_0_, orderitem0_.product as product3_0_0_, orderitem0_.SOLD_QUANTITY as SOLD_QUA4_0_0_, orderitem0_.UNIT_PRICE as UNIT_PRI5_0_0_ from ORDER_ITEM orderitem0_ where orderitem0_.ORDER_ITEM_ID=? for update
[13-01-17 13:27:15,206] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53a301f3]
[13-01-17 13:27:15,206] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : orders
[13-01-17 13:27:15,206] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : product
[13-01-17 13:27:15,206] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,207] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,207] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,207] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,208] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
          - SQL table alias mapping - orderitem0_
          - alias suffix - 0_
          - suffixed key columns - {ORDER_IT1_0_0_}

[13-01-17 13:27:15,208] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.OrderItem [PESSIMISTIC_FORCE_INCREMENT]: select orderitem0_.ORDER_ITEM_ID as ORDER_IT1_0_0_, orderitem0_.orders as orders2_0_0_, orderitem0_.product as product3_0_0_, orderitem0_.SOLD_QUANTITY as SOLD_QUA4_0_0_, orderitem0_.UNIT_PRICE as UNIT_PRI5_0_0_ from ORDER_ITEM orderitem0_ where orderitem0_.ORDER_ITEM_ID=? for update nowait
[13-01-17 13:27:15,208] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62cf6a84]
[13-01-17 13:27:15,208] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : orders
[13-01-17 13:27:15,209] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : product
[13-01-17 13:27:15,209] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,209] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,209] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,210] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,210] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
          - SQL table alias mapping - orderitem0_
          - alias suffix - 0_
          - suffixed key columns - {ORDER_IT1_0_0_}

[13-01-17 13:27:15,211] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.OrderItem [OPTIMISTIC]: select orderitem0_.ORDER_ITEM_ID as ORDER_IT1_0_0_, orderitem0_.orders as orders2_0_0_, orderitem0_.product as product3_0_0_, orderitem0_.SOLD_QUANTITY as SOLD_QUA4_0_0_, orderitem0_.UNIT_PRICE as UNIT_PRI5_0_0_ from ORDER_ITEM orderitem0_ where orderitem0_.ORDER_ITEM_ID=?
[13-01-17 13:27:15,211] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b2aafbc]
[13-01-17 13:27:15,211] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : orders
[13-01-17 13:27:15,212] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : product
[13-01-17 13:27:15,212] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,212] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,212] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,213] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,213] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.OrderItem, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.OrderItem)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.OrderItem)
          - SQL table alias mapping - orderitem0_
          - alias suffix - 0_
          - suffixed key columns - {ORDER_IT1_0_0_}

[13-01-17 13:27:15,213] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.OrderItem [OPTIMISTIC_FORCE_INCREMENT]: select orderitem0_.ORDER_ITEM_ID as ORDER_IT1_0_0_, orderitem0_.orders as orders2_0_0_, orderitem0_.product as product3_0_0_, orderitem0_.SOLD_QUANTITY as SOLD_QUA4_0_0_, orderitem0_.UNIT_PRICE as UNIT_PRI5_0_0_ from ORDER_ITEM orderitem0_ where orderitem0_.ORDER_ITEM_ID=?
[13-01-17 13:27:15,225] DEBUG (  hibernate.loader.entity.CascadeEntityLoader-                        <init>:  38) -> Static select for action ACTION_MERGE on entity com.kaplan.coding.mystore.persistence.domain.OrderItem: select orderitem0_.ORDER_ITEM_ID as ORDER_IT1_0_0_, orderitem0_.orders as orders2_0_0_, orderitem0_.product as product3_0_0_, orderitem0_.SOLD_QUANTITY as SOLD_QUA4_0_0_, orderitem0_.UNIT_PRICE as UNIT_PRI5_0_0_ from ORDER_ITEM orderitem0_ where orderitem0_.ORDER_ITEM_ID=?
[13-01-17 13:27:15,225] DEBUG (  hibernate.loader.entity.CascadeEntityLoader-                        <init>:  38) -> Static select for action ACTION_REFRESH on entity com.kaplan.coding.mystore.persistence.domain.OrderItem: select orderitem0_.ORDER_ITEM_ID as ORDER_IT1_0_0_, orderitem0_.orders as orders2_0_0_, orderitem0_.product as product3_0_0_, orderitem0_.SOLD_QUANTITY as SOLD_QUA4_0_0_, orderitem0_.UNIT_PRICE as UNIT_PRI5_0_0_ from ORDER_ITEM orderitem0_ where orderitem0_.ORDER_ITEM_ID=?
[13-01-17 13:27:15,225] DEBUG (hibernate.persister.entity.AbstractEntityPersister-                  logStaticSQL:3544) -> Static SQL for entity: com.kaplan.coding.mystore.persistence.domain.Product
[13-01-17 13:27:15,226] DEBUG (hibernate.persister.entity.AbstractEntityPersister-                  logStaticSQL:3549) ->  Version select: select SKU from PRODUCT where SKU =?
[13-01-17 13:27:15,226] DEBUG (hibernate.persister.entity.AbstractEntityPersister-                  logStaticSQL:3552) ->  Snapshot select: select product_.SKU, product_.NAME as NAME2_2_, product_.QUANTITY as QUANTITY3_2_, product_.UNIT_PRICE as UNIT_PRI4_2_ from PRODUCT product_ where product_.SKU=?
[13-01-17 13:27:15,226] DEBUG (      org.jboss.logging.DelegatingBasicLogger-                        debugf: 394) ->  Insert 0: insert into PRODUCT (NAME, QUANTITY, UNIT_PRICE, SKU) values (?, ?, ?, ?)
[13-01-17 13:27:15,226] DEBUG (      org.jboss.logging.DelegatingBasicLogger-                        debugf: 394) ->  Update 0: update PRODUCT set NAME=?, QUANTITY=?, UNIT_PRICE=? where SKU=?
[13-01-17 13:27:15,226] DEBUG (      org.jboss.logging.DelegatingBasicLogger-                        debugf: 394) ->  Delete 0: delete from PRODUCT where SKU=?
[13-01-17 13:27:15,226] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@787178b1]
[13-01-17 13:27:15,227] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : name
[13-01-17 13:27:15,227] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,227] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,227] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,227] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,228] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Product)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Product, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {SKU1_2_0_}

[13-01-17 13:27:15,228] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Product [NONE]: select product0_.SKU as SKU1_2_0_, product0_.NAME as NAME2_2_0_, product0_.QUANTITY as QUANTITY3_2_0_, product0_.UNIT_PRICE as UNIT_PRI4_2_0_ from PRODUCT product0_ where product0_.SKU=?
[13-01-17 13:27:15,228] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27da994b]
[13-01-17 13:27:15,229] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : name
[13-01-17 13:27:15,229] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,229] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,229] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,229] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,230] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Product)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Product, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {SKU1_2_0_}

[13-01-17 13:27:15,230] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Product [READ]: select product0_.SKU as SKU1_2_0_, product0_.NAME as NAME2_2_0_, product0_.QUANTITY as QUANTITY3_2_0_, product0_.UNIT_PRICE as UNIT_PRI4_2_0_ from PRODUCT product0_ where product0_.SKU=?
[13-01-17 13:27:15,230] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3360283]
[13-01-17 13:27:15,230] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : name
[13-01-17 13:27:15,230] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,231] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,231] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,231] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,232] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Product)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Product, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {SKU1_2_0_}

[13-01-17 13:27:15,232] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Product [UPGRADE]: select product0_.SKU as SKU1_2_0_, product0_.NAME as NAME2_2_0_, product0_.QUANTITY as QUANTITY3_2_0_, product0_.UNIT_PRICE as UNIT_PRI4_2_0_ from PRODUCT product0_ where product0_.SKU=? for update
[13-01-17 13:27:15,232] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73e4bb60]
[13-01-17 13:27:15,233] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : name
[13-01-17 13:27:15,233] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,233] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,233] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,234] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,234] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Product)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Product, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {SKU1_2_0_}

[13-01-17 13:27:15,234] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Product [UPGRADE_NOWAIT]: select product0_.SKU as SKU1_2_0_, product0_.NAME as NAME2_2_0_, product0_.QUANTITY as QUANTITY3_2_0_, product0_.UNIT_PRICE as UNIT_PRI4_2_0_ from PRODUCT product0_ where product0_.SKU=? for update nowait
[13-01-17 13:27:15,234] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a3883c4]
[13-01-17 13:27:15,235] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : name
[13-01-17 13:27:15,235] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,235] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,236] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,236] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,236] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Product)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Product, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {SKU1_2_0_}

[13-01-17 13:27:15,236] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Product [UPGRADE_SKIPLOCKED]: select product0_.SKU as SKU1_2_0_, product0_.NAME as NAME2_2_0_, product0_.QUANTITY as QUANTITY3_2_0_, product0_.UNIT_PRICE as UNIT_PRI4_2_0_ from PRODUCT product0_ where product0_.SKU=? for update
[13-01-17 13:27:15,237] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1304e0d7]
[13-01-17 13:27:15,237] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : name
[13-01-17 13:27:15,237] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,237] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,238] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,238] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,238] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Product)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Product, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {SKU1_2_0_}

[13-01-17 13:27:15,239] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Product [FORCE]: select product0_.SKU as SKU1_2_0_, product0_.NAME as NAME2_2_0_, product0_.QUANTITY as QUANTITY3_2_0_, product0_.UNIT_PRICE as UNIT_PRI4_2_0_ from PRODUCT product0_ where product0_.SKU=? for update nowait
[13-01-17 13:27:15,239] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7767bd4e]
[13-01-17 13:27:15,239] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : name
[13-01-17 13:27:15,239] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,239] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,240] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,240] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,240] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Product)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Product, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {SKU1_2_0_}

[13-01-17 13:27:15,240] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Product [PESSIMISTIC_READ]: select product0_.SKU as SKU1_2_0_, product0_.NAME as NAME2_2_0_, product0_.QUANTITY as QUANTITY3_2_0_, product0_.UNIT_PRICE as UNIT_PRI4_2_0_ from PRODUCT product0_ where product0_.SKU=? for update
[13-01-17 13:27:15,241] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433ef204]
[13-01-17 13:27:15,241] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : name
[13-01-17 13:27:15,241] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,241] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,241] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,241] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,242] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Product)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Product, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {SKU1_2_0_}

[13-01-17 13:27:15,242] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Product [PESSIMISTIC_WRITE]: select product0_.SKU as SKU1_2_0_, product0_.NAME as NAME2_2_0_, product0_.QUANTITY as QUANTITY3_2_0_, product0_.UNIT_PRICE as UNIT_PRI4_2_0_ from PRODUCT product0_ where product0_.SKU=? for update
[13-01-17 13:27:15,242] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@795b66d]
[13-01-17 13:27:15,242] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : name
[13-01-17 13:27:15,242] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,242] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,243] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,243] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,243] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Product)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Product, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {SKU1_2_0_}

[13-01-17 13:27:15,244] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.SKU as SKU1_2_0_, product0_.NAME as NAME2_2_0_, product0_.QUANTITY as QUANTITY3_2_0_, product0_.UNIT_PRICE as UNIT_PRI4_2_0_ from PRODUCT product0_ where product0_.SKU=? for update nowait
[13-01-17 13:27:15,244] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1068176]
[13-01-17 13:27:15,244] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : name
[13-01-17 13:27:15,244] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,245] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,245] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,245] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,245] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Product)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Product, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {SKU1_2_0_}

[13-01-17 13:27:15,245] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Product [OPTIMISTIC]: select product0_.SKU as SKU1_2_0_, product0_.NAME as NAME2_2_0_, product0_.QUANTITY as QUANTITY3_2_0_, product0_.UNIT_PRICE as UNIT_PRI4_2_0_ from PRODUCT product0_ where product0_.SKU=?
[13-01-17 13:27:15,246] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71789580]
[13-01-17 13:27:15,246] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : name
[13-01-17 13:27:15,246] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : quantity
[13-01-17 13:27:15,246] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : unitPrice
[13-01-17 13:27:15,246] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,247] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,247] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Product)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Product, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {SKU1_2_0_}

[13-01-17 13:27:15,248] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.SKU as SKU1_2_0_, product0_.NAME as NAME2_2_0_, product0_.QUANTITY as QUANTITY3_2_0_, product0_.UNIT_PRICE as UNIT_PRI4_2_0_ from PRODUCT product0_ where product0_.SKU=?
[13-01-17 13:27:15,248] DEBUG (  hibernate.loader.entity.CascadeEntityLoader-                        <init>:  38) -> Static select for action ACTION_MERGE on entity com.kaplan.coding.mystore.persistence.domain.Product: select product0_.SKU as SKU1_2_0_, product0_.NAME as NAME2_2_0_, product0_.QUANTITY as QUANTITY3_2_0_, product0_.UNIT_PRICE as UNIT_PRI4_2_0_ from PRODUCT product0_ where product0_.SKU=?
[13-01-17 13:27:15,248] DEBUG (  hibernate.loader.entity.CascadeEntityLoader-                        <init>:  38) -> Static select for action ACTION_REFRESH on entity com.kaplan.coding.mystore.persistence.domain.Product: select product0_.SKU as SKU1_2_0_, product0_.NAME as NAME2_2_0_, product0_.QUANTITY as QUANTITY3_2_0_, product0_.UNIT_PRICE as UNIT_PRI4_2_0_ from PRODUCT product0_ where product0_.SKU=?
[13-01-17 13:27:15,249] DEBUG (hibernate.persister.entity.AbstractEntityPersister-                  logStaticSQL:3544) -> Static SQL for entity: com.kaplan.coding.mystore.persistence.domain.Orders
[13-01-17 13:27:15,249] DEBUG (hibernate.persister.entity.AbstractEntityPersister-                  logStaticSQL:3549) ->  Version select: select ID from ORDERS where ID =?
[13-01-17 13:27:15,249] DEBUG (hibernate.persister.entity.AbstractEntityPersister-                  logStaticSQL:3552) ->  Snapshot select: select orders_.ID, orders_.AMOUNT as AMOUNT2_1_, orders_.CREATED_DATE as CREATED_3_1_ from ORDERS orders_ where orders_.ID=?
[13-01-17 13:27:15,249] DEBUG (      org.jboss.logging.DelegatingBasicLogger-                        debugf: 394) ->  Insert 0: insert into ORDERS (AMOUNT, CREATED_DATE, ID) values (?, ?, ?)
[13-01-17 13:27:15,250] DEBUG (      org.jboss.logging.DelegatingBasicLogger-                        debugf: 394) ->  Update 0: update ORDERS set AMOUNT=?, CREATED_DATE=? where ID=?
[13-01-17 13:27:15,250] DEBUG (      org.jboss.logging.DelegatingBasicLogger-                        debugf: 394) ->  Delete 0: delete from ORDERS where ID=?
[13-01-17 13:27:15,250] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@165614f5]
[13-01-17 13:27:15,250] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : amount
[13-01-17 13:27:15,251] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : createdDate
[13-01-17 13:27:15,251] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,251] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,252] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Orders)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Orders, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[13-01-17 13:27:15,252] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Orders [NONE]: select orders0_.ID as ID1_1_0_, orders0_.AMOUNT as AMOUNT2_1_0_, orders0_.CREATED_DATE as CREATED_3_1_0_ from ORDERS orders0_ where orders0_.ID=?
[13-01-17 13:27:15,252] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b0902b4]
[13-01-17 13:27:15,253] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : amount
[13-01-17 13:27:15,253] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : createdDate
[13-01-17 13:27:15,253] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,253] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,253] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Orders)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Orders, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[13-01-17 13:27:15,254] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Orders [READ]: select orders0_.ID as ID1_1_0_, orders0_.AMOUNT as AMOUNT2_1_0_, orders0_.CREATED_DATE as CREATED_3_1_0_ from ORDERS orders0_ where orders0_.ID=?
[13-01-17 13:27:15,254] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f04993d]
[13-01-17 13:27:15,254] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : amount
[13-01-17 13:27:15,254] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : createdDate
[13-01-17 13:27:15,255] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,255] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,255] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Orders)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Orders, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[13-01-17 13:27:15,255] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Orders [UPGRADE]: select orders0_.ID as ID1_1_0_, orders0_.AMOUNT as AMOUNT2_1_0_, orders0_.CREATED_DATE as CREATED_3_1_0_ from ORDERS orders0_ where orders0_.ID=? for update
[13-01-17 13:27:15,255] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@103c97ff]
[13-01-17 13:27:15,256] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : amount
[13-01-17 13:27:15,256] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : createdDate
[13-01-17 13:27:15,256] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,256] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,257] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Orders)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Orders, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[13-01-17 13:27:15,257] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Orders [UPGRADE_NOWAIT]: select orders0_.ID as ID1_1_0_, orders0_.AMOUNT as AMOUNT2_1_0_, orders0_.CREATED_DATE as CREATED_3_1_0_ from ORDERS orders0_ where orders0_.ID=? for update nowait
[13-01-17 13:27:15,257] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c14e5a5]
[13-01-17 13:27:15,257] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : amount
[13-01-17 13:27:15,257] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : createdDate
[13-01-17 13:27:15,258] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,258] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,258] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Orders)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Orders, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[13-01-17 13:27:15,258] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Orders [UPGRADE_SKIPLOCKED]: select orders0_.ID as ID1_1_0_, orders0_.AMOUNT as AMOUNT2_1_0_, orders0_.CREATED_DATE as CREATED_3_1_0_ from ORDERS orders0_ where orders0_.ID=? for update
[13-01-17 13:27:15,259] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6206b4a7]
[13-01-17 13:27:15,259] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : amount
[13-01-17 13:27:15,259] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : createdDate
[13-01-17 13:27:15,259] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,259] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,260] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Orders)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Orders, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[13-01-17 13:27:15,260] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Orders [FORCE]: select orders0_.ID as ID1_1_0_, orders0_.AMOUNT as AMOUNT2_1_0_, orders0_.CREATED_DATE as CREATED_3_1_0_ from ORDERS orders0_ where orders0_.ID=? for update nowait
[13-01-17 13:27:15,260] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c1b89ac]
[13-01-17 13:27:15,260] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : amount
[13-01-17 13:27:15,260] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : createdDate
[13-01-17 13:27:15,261] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,261] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,261] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Orders)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Orders, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[13-01-17 13:27:15,262] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Orders [PESSIMISTIC_READ]: select orders0_.ID as ID1_1_0_, orders0_.AMOUNT as AMOUNT2_1_0_, orders0_.CREATED_DATE as CREATED_3_1_0_ from ORDERS orders0_ where orders0_.ID=? for update
[13-01-17 13:27:15,262] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@175581eb]
[13-01-17 13:27:15,262] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : amount
[13-01-17 13:27:15,262] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : createdDate
[13-01-17 13:27:15,262] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,263] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,263] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Orders)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Orders, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[13-01-17 13:27:15,263] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Orders [PESSIMISTIC_WRITE]: select orders0_.ID as ID1_1_0_, orders0_.AMOUNT as AMOUNT2_1_0_, orders0_.CREATED_DATE as CREATED_3_1_0_ from ORDERS orders0_ where orders0_.ID=? for update
[13-01-17 13:27:15,263] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2baf72d5]
[13-01-17 13:27:15,263] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : amount
[13-01-17 13:27:15,264] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : createdDate
[13-01-17 13:27:15,264] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,264] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,264] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Orders)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Orders, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[13-01-17 13:27:15,265] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Orders [PESSIMISTIC_FORCE_INCREMENT]: select orders0_.ID as ID1_1_0_, orders0_.AMOUNT as AMOUNT2_1_0_, orders0_.CREATED_DATE as CREATED_3_1_0_ from ORDERS orders0_ where orders0_.ID=? for update nowait
[13-01-17 13:27:15,265] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d14e99e]
[13-01-17 13:27:15,265] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : amount
[13-01-17 13:27:15,265] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : createdDate
[13-01-17 13:27:15,265] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,266] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,266] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Orders)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Orders, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[13-01-17 13:27:15,266] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Orders [OPTIMISTIC]: select orders0_.ID as ID1_1_0_, orders0_.AMOUNT as AMOUNT2_1_0_, orders0_.CREATED_DATE as CREATED_3_1_0_ from ORDERS orders0_ where orders0_.ID=?
[13-01-17 13:27:15,266] DEBUG (        build.internal.spaces.QuerySpacesImpl-            registerQuerySpace: 174) -> Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@682618e5]
[13-01-17 13:27:15,267] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : amount
[13-01-17 13:27:15,267] DEBUG (   persister.walking.spi.MetamodelGraphWalker-      visitAttributeDefinition: 137) -> Visiting attribute path : createdDate
[13-01-17 13:27:15,267] DEBUG (plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy-                 buildLoadPlan: 150) -> Building LoadPlan...
[13-01-17 13:27:15,267] DEBUG (plan.exec.internal.LoadQueryJoinAndFetchProcessor-        processQuerySpaceJoins: 100) -> processing queryspace <gen:0>
[13-01-17 13:27:15,267] DEBUG (           plan.build.spi.LoadPlanTreePrinter-                       logTree:  55) -> LoadPlan(entity=com.kaplan.coding.mystore.persistence.domain.Orders)
    - Returns
       - EntityReturnImpl(entity=com.kaplan.coding.mystore.persistence.domain.Orders, querySpaceUid=<gen:0>, path=com.kaplan.coding.mystore.persistence.domain.Orders)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kaplan.coding.mystore.persistence.domain.Orders)
          - SQL table alias mapping - orders0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[13-01-17 13:27:15,268] DEBUG (              loader.entity.plan.EntityLoader-                        <init>: 115) -> Static select for entity com.kaplan.coding.mystore.persistence.domain.Orders [OPTIMISTIC_FORCE_INCREMENT]: select orders0_.ID as ID1_1_0_, orders0_.AMOUNT as AMOUNT2_1_0_, orders0_.CREATED_DATE as CREATED_3_1_0_ from ORDERS orders0_ where orders0_.ID=?
[13-01-17 13:27:15,268] DEBUG (  hibernate.loader.entity.CascadeEntityLoader-                        <init>:  38) -> Static select for action ACTION_MERGE on entity com.kaplan.coding.mystore.persistence.domain.Orders: select orders0_.ID as ID1_1_0_, orders0_.AMOUNT as AMOUNT2_1_0_, orders0_.CREATED_DATE as CREATED_3_1_0_ from ORDERS orders0_ where orders0_.ID=?
[13-01-17 13:27:15,268] DEBUG (  hibernate.loader.entity.CascadeEntityLoader-                        <init>:  38) -> Static select for action ACTION_REFRESH on entity com.kaplan.coding.mystore.persistence.domain.Orders: select orders0_.ID as ID1_1_0_, orders0_.AMOUNT as AMOUNT2_1_0_, orders0_.CREATED_DATE as CREATED_3_1_0_ from ORDERS orders0_ where orders0_.ID=?
[13-01-17 13:27:15,378] DEBUG (tool.schema.spi.SchemaManagementToolCoordinator-                       process:  56) -> No actions specified; doing nothing
[13-01-17 13:27:15,378] DEBUG (   jta.platform.internal.JtaPlatformInitiator-               initiateService:  42) -> No JtaPlatform was specified, checking resolver
[13-01-17 13:27:15,379] DEBUG (jta.platform.internal.JtaPlatformResolverInitiator-               initiateService:  33) -> No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[13-01-17 13:27:15,383] DEBUG (jta.platform.internal.StandardJtaPlatformResolver-            resolveJtaPlatform: 102) -> Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[13-01-17 13:27:15,384] DEBUG (     hibernate.query.spi.NamedQueryRepository-             checkNamedQueries: 151) -> Checking 0 named HQL queries
[13-01-17 13:27:15,384] DEBUG (     hibernate.query.spi.NamedQueryRepository-             checkNamedQueries: 167) -> Checking 0 named SQL queries
[13-01-17 13:27:15,385] DEBUG (org.hibernate.internal.SessionFactoryRegistry-                        <init>:  52) -> Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@716f94c1
[13-01-17 13:27:15,385] DEBUG (org.hibernate.internal.SessionFactoryRegistry-             addSessionFactory:  74) -> Registering SessionFactory: c65e89b0-f12c-4ada-a636-f6a372bc61f2 (<unnamed>)
[13-01-17 13:27:15,386] DEBUG (org.hibernate.internal.SessionFactoryRegistry-             addSessionFactory:  81) -> Not binding SessionFactory to JNDI, no JNDI name configured
[13-01-17 13:27:17,548] DEBUG (  hibernate.stat.internal.StatisticsInitiator-       initiateServiceInternal:  82) -> Statistics initialized [enabled=true]
[13-01-17 13:27:17,553] DEBUG (  engine.transaction.internal.TransactionImpl-                         begin:  55) -> begin
[13-01-17 13:27:17,555]  WARN (           org.hibernate.internal.SessionImpl-                createCriteria:1796) -> HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead
[13-01-17 13:27:17,700] DEBUG (hibernate.stat.internal.ConcurrentStatisticsImpl-                 queryExecuted: 387) -> HHH000117: HQL: [CRITERIA] select this_.SKU as SKU1_2_0_, this_.NAME as NAME2_2_0_, this_.QUANTITY as QUANTITY3_2_0_, this_.UNIT_PRICE as UNIT_PRI4_2_0_ from PRODUCT this_, time: 136ms, rows: 0
[13-01-17 13:27:17,701] DEBUG (  engine.transaction.internal.TransactionImpl-                        commit:  66) -> committing
[13-01-17 13:27:17,806] DEBUG (resource.jdbc.internal.LogicalConnectionManagedImpl-              afterTransaction: 154) -> Initiating JDBC connection release from afterTransaction
[13-01-17 13:27:17,908] DEBUG (resource.jdbc.internal.LogicalConnectionManagedImpl-              afterTransaction: 154) -> Initiating JDBC connection release from afterTransaction
[13-01-17 13:27:17,909]  INFO (hibernate.engine.internal.StatisticalLoggingSessionEventListener-                           end: 258) -> Session Metrics {
    56249 nanoseconds spent acquiring 1 JDBC connections;
    101888632 nanoseconds spent releasing 1 JDBC connections;
    32364510 nanoseconds spent preparing 1 JDBC statements;
    97555094 nanoseconds spent executing 1 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    18786 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}
[13-01-17 13:27:43,129] DEBUG (    org.hibernate.internal.SessionFactoryImpl-                         close: 733) -> HHH000031: Closing
[13-01-17 13:27:43,130] DEBUG (hibernate.service.internal.AbstractServiceRegistryImpl-               deRegisterChild: 410) -> Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[13-01-17 13:27:43,130] DEBUG (boot.registry.internal.BootstrapServiceRegistryImpl-               deRegisterChild: 295) -> Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
